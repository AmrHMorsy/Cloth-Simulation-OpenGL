#version 330 core

layout(triangles, equal_spacing, ccw) in ;

in float tcmirror[]  ;
in vec3 tcWorldPosition[] ;
in vec2 tcTextureCoordinates[] ;
in vec3 tcNormal[] ;

out float mirror ;
out vec3 view_position ;
out vec2 texture_coordinates ;
out vec3 _normal ;
out vec3 world_position ;
out vec4 fragment_position_light_space ;

uniform sampler2D displacement_map ;
uniform mat4 view ;
uniform mat4 projection ;
uniform mat4 light_projection ;
uniform mat4 light_view ;


void main()
{
    world_position = gl_TessCoord.x * tcWorldPosition[0] +
                        gl_TessCoord.y * tcWorldPosition[1] +
                        gl_TessCoord.z * tcWorldPosition[2] ;
    texture_coordinates = gl_TessCoord.x * tcTextureCoordinates[0] +
                           gl_TessCoord.y * tcTextureCoordinates[1] +
                           gl_TessCoord.z * tcTextureCoordinates[2] ;
    _normal = gl_TessCoord.x * tcNormal[0] +
                           gl_TessCoord.y * tcNormal[1] +
                           gl_TessCoord.z * tcNormal[2] ;
    mirror = tcmirror[0] ; 
    world_position.y += 0.05f * texture(displacement_map, texture_coordinates).r ;
    gl_Position = projection * view * vec4(world_position, 1.0) ;
    view_position = (view * vec4(world_position, 1.0)).xyz ;
    
    fragment_position_light_space = light_projection * light_view * vec4(world_position, 1.0) ;
}
